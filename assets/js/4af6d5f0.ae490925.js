"use strict";(self.webpackChunkstately_docs=self.webpackChunkstately_docs||[]).push([[28740],{3905:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>l,MDXProvider:()=>m,mdx:()=>b,useMDXComponents:()=>d,withMDXComponents:()=>p});var r=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a.apply(this,arguments)}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=r.createContext({}),p=function(e){return function(t){var n=d(t.components);return r.createElement(e,a({},t,{components:n}))}},d=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=d(n),m=s,f=p["".concat(o,".").concat(m)]||p[m]||u[m]||a;return n?r.createElement(f,i(i({ref:t},l),{},{components:n})):r.createElement(f,i({ref:t},l))}));function b(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,o=new Array(a);o[0]=f;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:s,o[1]=i;for(var l=2;l<a;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},22653:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=n(87462),s=(n(67294),n(3905));const a={title:"Jest in XState Test",description:"Model-based testing with XState: How to implement model-based testing with Jest and XState\u2019s @xstate/test package."},o="Jest",i={unversionedId:"xstate/model-based-testing/jest",id:"version-4/xstate/model-based-testing/jest",title:"Jest in XState Test",description:"Model-based testing with XState: How to implement model-based testing with Jest and XState\u2019s @xstate/test package.",source:"@site/versioned_docs/version-4/xstate/model-based-testing/jest.mdx",sourceDirName:"xstate/model-based-testing",slug:"/xstate/model-based-testing/jest",permalink:"/docs/xstate-v4/xstate/model-based-testing/jest",draft:!1,editUrl:"https://github.com/statelyai/docs/tree/main/versioned_docs/version-4/xstate/model-based-testing/jest.mdx",tags:[],version:"4",frontMatter:{title:"Jest in XState Test",description:"Model-based testing with XState: How to implement model-based testing with Jest and XState\u2019s @xstate/test package."},sidebar:"tutorialSidebar",previous:{title:"Event cases",permalink:"/docs/xstate-v4/xstate/model-based-testing/event-cases"},next:{title:"Vitest in XState Test",permalink:"/docs/xstate-v4/xstate/model-based-testing/vitest"}},c={},l=[],p={toc:l};function d(e){let{components:t,...n}=e;return(0,s.mdx)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,s.mdx)("h1",{id:"jest"},"Jest"),(0,s.mdx)("p",null,"Integrating with ",(0,s.mdx)("a",{parentName:"p",href:"https://jestjs.io"},"Jest")," is simple with ",(0,s.mdx)("inlineCode",{parentName:"p"},"@xstate/test"),"."),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-ts"},"import { createTestMachine, createTestModel } from '@xstate/test';\n\nconst machine = createTestMachine({\n  // machine config\n});\n\ndescribe('My app', () => {\n  createTestModel(machine)\n    .getPaths()\n    .forEach((path) => {\n      it(path.description, async () => {\n        await path.test({\n          states: {},\n          events: {},\n        });\n      });\n    });\n});\n")))}d.isMDXComponent=!0}}]);