"use strict";(self.webpackChunkstately_docs=self.webpackChunkstately_docs||[]).push([[84413],{3905:(e,n,t)=>{t.r(n),t.d(n,{MDXContext:()=>d,MDXProvider:()=>p,mdx:()=>f,useMDXComponents:()=>v,withMDXComponents:()=>c});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(){return a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e},a.apply(this,arguments)}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=o.createContext({}),c=function(e){return function(n){var t=v(n.components);return o.createElement(e,a({},n,{components:t}))}},v=function(e){var n=o.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=v(e.components);return o.createElement(d.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=v(t),p=r,u=c["".concat(i,".").concat(p)]||c[p]||m[p]||a;return t?o.createElement(u,s(s({ref:n},d),{},{components:t})):o.createElement(u,s({ref:n},d))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var d=2;d<a;d++)i[d]=t[d];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},10198:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>v,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var o=t(87462),r=(t(67294),t(3905));const a={title:"Invoke done events",description:"An invoke done event transitions from a state once its invocation has been completed. An invoke done event is labeled \u201cdone:\u201d followed by the invocation\u2019s ID."},i=void 0,s={unversionedId:"transitions-and-events/invoke-done-events",id:"version-4/transitions-and-events/invoke-done-events",title:"Invoke done events",description:"An invoke done event transitions from a state once its invocation has been completed. An invoke done event is labeled \u201cdone:\u201d followed by the invocation\u2019s ID.",source:"@site/versioned_docs/version-4/transitions-and-events/invoke-done-events.mdx",sourceDirName:"transitions-and-events",slug:"/transitions-and-events/invoke-done-events",permalink:"/docs/xstate-v4/transitions-and-events/invoke-done-events",draft:!1,editUrl:"https://github.com/statelyai/docs/tree/main/versioned_docs/version-4/transitions-and-events/invoke-done-events.mdx",tags:[],version:"4",frontMatter:{title:"Invoke done events",description:"An invoke done event transitions from a state once its invocation has been completed. An invoke done event is labeled \u201cdone:\u201d followed by the invocation\u2019s ID."},sidebar:"tutorialSidebar",previous:{title:"State done events",permalink:"/docs/xstate-v4/transitions-and-events/state-done-events"},next:{title:"Invoke error events",permalink:"/docs/xstate-v4/transitions-and-events/invoke-error-events"}},l={},d=[{value:"Create invoke done events",id:"create-invoke-done-events",level:3}],c={toc:d};function v(e){let{components:n,...t}=e;return(0,r.mdx)("wrapper",(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)("p",null,"An\xa0",(0,r.mdx)("strong",{parentName:"p"},"invoke done event"),"\xa0transitions from a state once its invocation has been completed. An invoke done event is labeled \u201cdone:\u201d followed by the invocation\u2019s ID."),(0,r.mdx)("h3",{id:"create-invoke-done-events"},"Create invoke done events"),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},"Select the state with an invoked actor where you want to add an invoke done event."),(0,r.mdx)("li",{parentName:"ol"},"Drag from the handles on the left, right and bottom sides of the selected state, and release to create a connecting transition, event and new state."),(0,r.mdx)("li",{parentName:"ol"},"The newly-created event will automatically be created as an invoke done event.")),(0,r.mdx)("p",null,"You can also change an existing event into an invoked done event using the\xa0",(0,r.mdx)("strong",{parentName:"p"},"quick actions"),"\xa0menu:"),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},"Select the existing event you wish to change into an invoke done event."),(0,r.mdx)("li",{parentName:"ol"},"Right-click the state to open the\xa0",(0,r.mdx)("strong",{parentName:"li"},"quick actions"),"\xa0menu."),(0,r.mdx)("li",{parentName:"ol"},"Choose\xa0",(0,r.mdx)("strong",{parentName:"li"},"Invocation done event"),"\xa0from the\xa0",(0,r.mdx)("strong",{parentName:"li"},"Event type"),"\xa0options.")))}v.isMDXComponent=!0}}]);