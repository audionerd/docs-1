"use strict";(self.webpackChunkstately_docs=self.webpackChunkstately_docs||[]).push([[33903],{3905:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>l,MDXProvider:()=>m,mdx:()=>g,useMDXComponents:()=>c,withMDXComponents:()=>u});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(){return i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},i.apply(this,arguments)}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),u=function(e){return function(t){var n=c(t.components);return a.createElement(e,i({},t,{components:n}))}},c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},m=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,l=d(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,p=u["".concat(o,".").concat(m)]||u[m]||h[m]||i;return n?a.createElement(p,s(s({ref:t},l),{},{components:n})):a.createElement(p,s({ref:t},l))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=p;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},36710:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var a=n(87462),r=(n(67294),n(3905));const i={title:"Guards",description:"A guard is a condition that the machine checks when it goes through an event. If the condition is true, the machine follows the transition to the next state."},o=void 0,s={unversionedId:"transitions-and-events/guards",id:"version-4/transitions-and-events/guards",title:"Guards",description:"A guard is a condition that the machine checks when it goes through an event. If the condition is true, the machine follows the transition to the next state.",source:"@site/versioned_docs/version-4/transitions-and-events/guards.mdx",sourceDirName:"transitions-and-events",slug:"/transitions-and-events/guards",permalink:"/docs/xstate-v4/transitions-and-events/guards",draft:!1,editUrl:"https://github.com/statelyai/docs/tree/main/versioned_docs/version-4/transitions-and-events/guards.mdx",tags:[],version:"4",frontMatter:{title:"Guards",description:"A guard is a condition that the machine checks when it goes through an event. If the condition is true, the machine follows the transition to the next state."},sidebar:"tutorialSidebar",previous:{title:"Transitions and events",permalink:"/docs/xstate-v4/transitions-and-events/intro"},next:{title:"Eventless (always) transitions",permalink:"/docs/xstate-v4/transitions-and-events/eventless-transitions"}},d={},l=[{value:"Replace event with a guard",id:"replace-event-with-a-guard",level:2},{value:"On the canvas",id:"on-the-canvas",level:3},{value:"Using the transition Details panel",id:"using-the-transition-details-panel",level:3}],u=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.mdx)("div",t)},c=u("ThemedImage"),m=u("Plus"),h=u("Info"),p={toc:l};function g(e){let{components:t,...n}=e;return(0,r.mdx)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("p",null,"A\xa0",(0,r.mdx)("strong",{parentName:"p"},"guard"),"\xa0is a condition that the machine checks when it goes through an event. If the condition is true, the machine follows the transition to the next state. If the condition is false, the machine follows the rest of the conditions to the next state. Any transition can be a guarded transition."),(0,r.mdx)("p",null,(0,r.mdx)(c,{alt:"A video player state machine with an initial Paused State and a Playing state. The transition from Playing to Paused has a guard numbered 1 and labeled \u2018If time left is zero\u2019. The first guard is joined to a second guard by a dotted line. The second guard is numbered 2 and is labeled \u2018Else if time left is more than zero.\u2019 The second guard\u2019s transition targets the Playing state.",sources:{light:"/assets/transitions-and-events/guards/guards.png",dark:"/assets/transitions-and-events/guards/guards-dm.png"},mdxType:"ThemedImage"})),(0,r.mdx)("admonition",{type:"studio"},(0,r.mdx)("p",{parentName:"admonition"},"In the Stately Studio, guards are numbered in the order they are checked and labeled with \u201cif\u201d or \u201celse if\u201d along with their condition. Multiple guards on the same events are connected with a dotted line.")),(0,r.mdx)("h2",{id:"replace-event-with-a-guard"},"Replace event with a guard"),(0,r.mdx)("p",null,"When multiple guard conditions are added to one transition, the guards will be numbered in order. The first guard will be labeled ",(0,r.mdx)("strong",{parentName:"p"},"IF")," and subsequent guards will be labeled ",(0,r.mdx)("strong",{parentName:"p"},"ELSE"),"."),(0,r.mdx)("h3",{id:"on-the-canvas"},"On the canvas"),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},"Select the event you want to replace with a guarded transition."),(0,r.mdx)("li",{parentName:"ol"},"Use the ",(0,r.mdx)(m,{size:18,mdxType:"Plus"})," plus icon button to open the edit menu."),(0,r.mdx)("li",{parentName:"ol"},"Choose ",(0,r.mdx)("strong",{parentName:"li"},"Guard condition")," from the menu to add a guarded transition."),(0,r.mdx)("li",{parentName:"ol"},"Enter your condition into the text input.")),(0,r.mdx)("h3",{id:"using-the-transition-details-panel"},"Using the transition Details panel"),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},"Open the transition ",(0,r.mdx)(h,{size:18,mdxType:"Info"})," ",(0,r.mdx)("strong",{parentName:"li"},"Details")," panel from the right tool menu."),(0,r.mdx)("li",{parentName:"ol"},"Use the ",(0,r.mdx)("strong",{parentName:"li"},"Guard")," text input to name your guard\u2019s condition and replace your event with a guarded transition.")),(0,r.mdx)("admonition",{type:"xstate"},(0,r.mdx)("h2",{parentName:"admonition",id:"looking-for-how-to-use-guards-in-xstate"},"Looking for how to use guards in XState?"),(0,r.mdx)("p",{parentName:"admonition"},"Find out ",(0,r.mdx)("a",{parentName:"p",href:"/docs/xstate-v4/xstate/transitions-and-choices/guards"},"more about guards in XState")," in the XState section of the docs.")))}g.isMDXComponent=!0}}]);