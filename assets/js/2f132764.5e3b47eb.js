"use strict";(self.webpackChunkstately_docs=self.webpackChunkstately_docs||[]).push([[62585],{3905:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>c,MDXProvider:()=>s,mdx:()=>f,useMDXComponents:()=>l,withMDXComponents:()=>d});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},a.apply(this,arguments)}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function m(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),d=function(e){return function(t){var n=l(t.components);return o.createElement(e,a({},t,{components:n}))}},l=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):m(m({},t),e)),n},s=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=l(n),s=r,h=d["".concat(i,".").concat(s)]||d[s]||u[s]||a;return n?o.createElement(h,m(m({ref:t},c),{},{components:n})):o.createElement(h,m({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=h;var m={};for(var p in t)hasOwnProperty.call(t,p)&&(m[p]=t[p]);m.originalType=e,m.mdxType="string"==typeof e?e:r,i[1]=m;for(var c=2;c<a;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},87385:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>m,toc:()=>c});var o=n(87462),r=(n(67294),n(3905));const a={title:"Import from code"},i=void 0,m={unversionedId:"import-from-code",id:"version-4/import-from-code",title:"Import from code",description:"Importing from code is helpful if you\u2019ve already built machines while working with XState, or have created a machine using our older Stately Viz but haven\u2019t yet tried the Stately Studio Editor.",source:"@site/versioned_docs/version-4/import-from-code.mdx",sourceDirName:".",slug:"/import-from-code",permalink:"/docs/xstate-v4/import-from-code",draft:!1,editUrl:"https://github.com/statelyai/docs/tree/main/versioned_docs/version-4/import-from-code.mdx",tags:[],version:"4",frontMatter:{title:"Import from code"},sidebar:"tutorialSidebar",previous:{title:"Generate flow",permalink:"/docs/xstate-v4/generate-flow"},next:{title:"Export as code",permalink:"/docs/xstate-v4/export-as-code"}},p={},c=[{value:"Import code",id:"import-code",level:2},{value:"Import multiple machines",id:"import-multiple-machines",level:2},{value:"Import code to overwrite your machine from the code panel",id:"import-code-to-overwrite-your-machine-from-the-code-panel",level:2},{value:"Import code to overwrite a machine from the machines list",id:"import-code-to-overwrite-a-machine-from-the-machines-list",level:2},{value:"Create a new machine inside a project using import code",id:"create-a-new-machine-inside-a-project-using-import-code",level:2},{value:"Machine code example",id:"machine-code-example",level:2}],d=(l="MoreHorizontal",function(e){return console.warn("Component "+l+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.mdx)("div",e)});var l;const s={toc:c};function u(e){let{components:t,...n}=e;return(0,r.mdx)("wrapper",(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("p",null,"Importing from code is helpful if you\u2019ve already built machines while working with ",(0,r.mdx)("a",{parentName:"p",href:"/docs/xstate-v4/xstate"},"XState"),", or have created a machine using our older ",(0,r.mdx)("a",{parentName:"p",href:"https://stately.ai/viz"},"Stately Viz")," but haven\u2019t yet tried the Stately Studio Editor."),(0,r.mdx)("admonition",{type:"video"},(0,r.mdx)("p",{parentName:"admonition"},"Watch our ",(0,r.mdx)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=DAoIFaugDLo"},"\u201cImport from code\u201d video on YouTube")," (2m24s).")),(0,r.mdx)("admonition",{type:"tip"},(0,r.mdx)("p",{parentName:"admonition"},"Want to import machines from GitHub? Try our ",(0,r.mdx)("a",{parentName:"p",href:"/docs/xstate-v4/import-from-github"},"import from GitHub")," options.")),(0,r.mdx)("h2",{id:"import-code"},"Import code"),(0,r.mdx)("p",null,"Your code should be formatted as a ",(0,r.mdx)("a",{parentName:"p",href:"https://xstate.js.org/docs/guides/machines.html"},(0,r.mdx)("inlineCode",{parentName:"a"},"createMachine()")," factory function")," before import. The importer has basic validation in case your machine has basic errors, including reminding you if the ",(0,r.mdx)("inlineCode",{parentName:"p"},"createMachine")," definition is missing. "),(0,r.mdx)("p",null,(0,r.mdx)("a",{parentName:"p",href:"/#machine-code-example"},"Check out an importable machine code example at the end of this page"),"."),(0,r.mdx)("admonition",{type:"caution"},(0,r.mdx)("p",{parentName:"admonition"},(0,r.mdx)("strong",{parentName:"p"},"Caution"),": importing code will overwrite your current or selected machine unless you create a new machine from the ",(0,r.mdx)("strong",{parentName:"p"},"Machines list")," inside a project.")),(0,r.mdx)("h2",{id:"import-multiple-machines"},"Import multiple machines"),(0,r.mdx)("admonition",{type:"new"},(0,r.mdx)("p",{parentName:"admonition"},"You can now import multiple machines when importing code.")),(0,r.mdx)("p",null,"If you have multiple ",(0,r.mdx)("inlineCode",{parentName:"p"},"createMachine"),"s included in the code you insert in the text area, the Studio will import each machine as a new machine inside your project."),(0,r.mdx)("h2",{id:"import-code-to-overwrite-your-machine-from-the-code-panel"},"Import code to overwrite your machine from the code panel"),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},"Open the ",(0,r.mdx)("strong",{parentName:"li"},"Code")," panel from the right tool menu."),(0,r.mdx)("li",{parentName:"ol"},"Use the ",(0,r.mdx)("strong",{parentName:"li"},"Import")," button to open the importer."),(0,r.mdx)("li",{parentName:"ol"},"Paste or type your machine code into the text area."),(0,r.mdx)("li",{parentName:"ol"},"Use the ",(0,r.mdx)("strong",{parentName:"li"},"Import")," button to import your machine, overwriting your current machine.")),(0,r.mdx)("h2",{id:"import-code-to-overwrite-a-machine-from-the-machines-list"},"Import code to overwrite a machine from the machines list"),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},"Open the ",(0,r.mdx)("strong",{parentName:"li"},"Machines")," list from the left drawer menu."),(0,r.mdx)("li",{parentName:"ol"},"Use the ",(0,r.mdx)(d,{size:18,mdxType:"MoreHorizontal"})," triple dot icon alongside a machine to open the machine options menu."),(0,r.mdx)("li",{parentName:"ol"},"Use the ",(0,r.mdx)("strong",{parentName:"li"},"Import Code")," option to open the import text area."),(0,r.mdx)("li",{parentName:"ol"},"Paste or type your machine code into the text area."),(0,r.mdx)("li",{parentName:"ol"},"Use the ",(0,r.mdx)("strong",{parentName:"li"},"Import")," button to import your machine, overwriting the selected machine.")),(0,r.mdx)("h2",{id:"create-a-new-machine-inside-a-project-using-import-code"},"Create a new machine inside a project using import code"),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},"Open the ",(0,r.mdx)("strong",{parentName:"li"},"Machines")," list from the left drawer menu."),(0,r.mdx)("li",{parentName:"ol"},"Use the ",(0,r.mdx)("strong",{parentName:"li"},"+")," plus icon alongside the ",(0,r.mdx)("strong",{parentName:"li"},"Machines")," heading to open the new machine options."),(0,r.mdx)("li",{parentName:"ol"},"Enter a name for your new machine in the text input."),(0,r.mdx)("li",{parentName:"ol"},"Select the ",(0,r.mdx)("strong",{parentName:"li"},"Import Code")," switch to open the import text area."),(0,r.mdx)("li",{parentName:"ol"},"Paste or type your machine code into the text area."),(0,r.mdx)("li",{parentName:"ol"},"Use the ",(0,r.mdx)("strong",{parentName:"li"},"Create machine")," button to import your machine as a new machine in your project.")),(0,r.mdx)("h2",{id:"machine-code-example"},"Machine code example"),(0,r.mdx)("p",null,"Below is an example of a ",(0,r.mdx)("inlineCode",{parentName:"p"},"createMachine()")," factory function which you can import as a machine without any errors:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-js"},'\ncreateMachine({\n  id: "Video",\n  initial: "Closed",\n  description: "Video player",\n  states: {\n    Closed: {\n      on: {\n        PLAY: {\n          target: "Opened",\n        },\n      },\n    },\n    Opened: {\n      invoke: {\n        src: "startVideo",\n      },\n      initial: "Playing",\n      description: "Fullscreen mode",\n      states: {\n        Playing: {\n          on: {\n            PAUSE: {\n              target: "Paused",\n            },\n          },\n        },\n        Paused: {\n          on: {\n            PLAY: {\n              target: "Playing",\n            },\n          },\n        },\n        Stopped: {\n          type: "final",\n          after: {\n            "5000": {\n              target: "#Video.Closed",\n              actions: [],\n              internal: false,\n            },\n          },\n        },\n      },\n      on: {\n        STOP: {\n          target: ".Stopped",\n        },\n      },\n    },\n  },\n  context: {},\n  predictableActionArguments: true,\n  preserveActionOrder: true,\n});\n\n')))}u.isMDXComponent=!0}}]);