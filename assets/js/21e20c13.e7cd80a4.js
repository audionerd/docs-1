"use strict";(self.webpackChunkstately_docs=self.webpackChunkstately_docs||[]).push([[69645],{3905:(n,e,t)=>{t.r(e),t.d(e,{MDXContext:()=>l,MDXProvider:()=>p,mdx:()=>g,useMDXComponents:()=>u,withMDXComponents:()=>d});var o=t(67294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function r(){return r=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(n[o]=t[o])}return n},r.apply(this,arguments)}function s(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,o)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?s(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function c(n,e){if(null==n)return{};var t,o,a=function(n,e){if(null==n)return{};var t,o,a={},r=Object.keys(n);for(o=0;o<r.length;o++)t=r[o],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(o=0;o<r.length;o++)t=r[o],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var l=o.createContext({}),d=function(n){return function(e){var t=u(e.components);return o.createElement(n,r({},e,{components:t}))}},u=function(n){var e=o.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},p=function(n){var e=u(n.components);return o.createElement(l.Provider,{value:e},n.children)},m={inlineCode:"code",wrapper:function(n){var e=n.children;return o.createElement(o.Fragment,{},e)}},h=o.forwardRef((function(n,e){var t=n.components,a=n.mdxType,r=n.originalType,s=n.parentName,l=c(n,["components","mdxType","originalType","parentName"]),d=u(t),p=a,h=d["".concat(s,".").concat(p)]||d[p]||m[p]||r;return t?o.createElement(h,i(i({ref:e},l),{},{components:t})):o.createElement(h,i({ref:e},l))}));function g(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var r=t.length,s=new Array(r);s[0]=h;var i={};for(var c in e)hasOwnProperty.call(e,c)&&(i[c]=e[c]);i.originalType=n,i.mdxType="string"==typeof n?n:a,s[1]=i;for(var l=2;l<r;l++)s[l]=t[l];return o.createElement.apply(null,s)}return o.createElement.apply(null,t)}h.displayName="MDXCreateElement"},33897:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var o=t(87462),a=(t(67294),t(3905));const r={title:"Guarded actions"},s="Guarded actions",i={unversionedId:"xstate/transitions-and-choices/guarded-actions",id:"version-4/xstate/transitions-and-choices/guarded-actions",title:"Guarded actions",description:"You can use actions and guards together to run actions conditionally on transitions.",source:"@site/versioned_docs/version-4/xstate/transitions-and-choices/guarded-actions.mdx",sourceDirName:"xstate/transitions-and-choices",slug:"/xstate/transitions-and-choices/guarded-actions",permalink:"/docs/xstate-v4/xstate/transitions-and-choices/guarded-actions",draft:!1,editUrl:"https://github.com/statelyai/docs/tree/main/versioned_docs/version-4/xstate/transitions-and-choices/guarded-actions.mdx",tags:[],version:"4",frontMatter:{title:"Guarded actions"},sidebar:"tutorialSidebar",previous:{title:"Guards",permalink:"/docs/xstate-v4/xstate/transitions-and-choices/guards"},next:{title:"Always",permalink:"/docs/xstate-v4/xstate/transitions-and-choices/always"}},c={},l=[{value:"The <code>choose</code> action",id:"the-choose-action",level:2}],d={toc:l};function u(n){let{components:e,...t}=n;return(0,a.mdx)("wrapper",(0,o.Z)({},d,t,{components:e,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"guarded-actions"},"Guarded actions"),(0,a.mdx)("p",null,"You can use actions and guards together to run actions conditionally on transitions."),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-ts"},"import { createMachine } from 'xstate';\n\nconst atmMachine = createMachine(\n  {\n    context: {\n      balance: 20,\n    },\n    initial: 'showingBalance',\n    states: {\n      showingBalance: {\n        on: {\n          WITHDRAW_TEN_DOLLARS: {\n            cond: 'hasAtLeastTenDollars',\n            actions: 'logTenDollarsComing',\n          },\n        },\n      },\n    },\n  },\n  {\n    guards: {\n      hasAtLeastTenDollars: (context) => {\n        return context.balance >= 10;\n      },\n    },\n    actions: {\n      logTenDollarsComing: () => {\n        console.log(`Here's your ten dollars!`);\n      },\n    },\n  }\n);\n")),(0,a.mdx)("p",null,"In the example above, when the user withdraws ten dollars via ",(0,a.mdx)("inlineCode",{parentName:"p"},"WITHDRAW_TEN_DOLLARS"),", we check first if the balance in ",(0,a.mdx)("inlineCode",{parentName:"p"},"context")," has at least 10 dollars."),(0,a.mdx)("p",null,"We can add an else condition to ",(0,a.mdx)("inlineCode",{parentName:"p"},"WITHDRAW_TEN_DOLLARS")," too:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-ts"},"import { createMachine } from 'xstate';\n\nconst atmMachine = createMachine(\n  {\n    context: {\n      balance: 20,\n    },\n    initial: 'showingBalance',\n    states: {\n      showingBalance: {\n        on: {\n          // highlight-start\n          WITHDRAW_TEN_DOLLARS: [\n            {\n              cond: 'hasAtLeastTenDollars',\n              actions: 'logTenDollarsComing',\n            },\n            {\n              actions: 'sayThereIsNotEnoughInTheAccount',\n            },\n          ],\n          // highlight-end\n        },\n      },\n    },\n  },\n  {\n    guards: {\n      hasAtLeastTenDollars: (context) => {\n        return context.balance >= 10;\n      },\n    },\n    actions: {\n      logTenDollarsComing: () => {\n        console.log(`Here's your ten dollars!`);\n      },\n      sayThereIsNotEnoughInTheAccount: () => {\n        console.log('Not enough in the account!');\n      },\n    },\n  }\n);\n")),(0,a.mdx)("p",null,"In the example above, if we have at least ten dollars in the account, we\u2019ll log that the dollars are coming. Else, we\u2019ll log that there\u2019s not enough in the account."),(0,a.mdx)("p",null,"Remember, ",(0,a.mdx)("strong",{parentName:"p"},"the cond always runs ",(0,a.mdx)("em",{parentName:"strong"},"before")," the action"),". XState first checks if it should run the action by running the ",(0,a.mdx)("inlineCode",{parentName:"p"},"cond"),", and only then runs the action."),(0,a.mdx)("h2",{id:"the-choose-action"},"The ",(0,a.mdx)("inlineCode",{parentName:"h2"},"choose")," action"),(0,a.mdx)("p",null,"The ",(0,a.mdx)("inlineCode",{parentName:"p"},"choose()")," built-in action is an alternative API for guarded actions. ",(0,a.mdx)("inlineCode",{parentName:"p"},"choose")," lets you pick which actions should be executed based on some conditions inside the action itself."),(0,a.mdx)("p",null,"The ",(0,a.mdx)("inlineCode",{parentName:"p"},"choose()")," approach helps you be more flexible with where you run actions. For example, you can run actions inside an entry action:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-ts"},"import { actions, createMachine } from 'xstate';\n\nconst logMachine = createMachine(\n  {\n    entry: actions.choose([\n      {\n        cond: 'inBrowser',\n        actions: 'alertUser',\n      },\n      {\n        actions: 'logToUser',\n      },\n    ]),\n  },\n  {\n    guards: {\n      inBrowser: () => {\n        return typeof window === 'undefined';\n      },\n    },\n    actions: {\n      alertUser: () => {\n        alert('Hello, browser!');\n      },\n      logToUser: () => {\n        console.log('Hello, server!');\n      },\n    },\n  }\n);\n")),(0,a.mdx)("p",null,"Like all built-in actions, you must apply the result of ",(0,a.mdx)("inlineCode",{parentName:"p"},"choose()")," directly to an ",(0,a.mdx)("inlineCode",{parentName:"p"},"actions")," attribute. The following example will not work:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-ts"},"import { actions, createMachine } from 'xstate';\nconst logMachine = createMachine({\n  entry: () => {\n    // \ud83d\udeab The following action just returns an object,\n    // it doesn\u2019t do anything\n    actions.choose([\n      {\n        cond: 'inBrowser',\n        actions: 'alertUser',\n      },\n      {\n        actions: 'logToUser',\n      },\n    ]);\n  },\n});\n")))}u.isMDXComponent=!0}}]);