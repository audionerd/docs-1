"use strict";(self.webpackChunkstately_docs=self.webpackChunkstately_docs||[]).push([[1569],{3905:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>d,MDXProvider:()=>m,mdx:()=>g,useMDXComponents:()=>p,withMDXComponents:()=>u});var s=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(){return o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s])}return e},o.apply(this,arguments)}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,s,a=function(e,t){if(null==e)return{};var n,s,a={},o=Object.keys(e);for(s=0;s<o.length;s++)n=o[s],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(s=0;s<o.length;s++)n=o[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=s.createContext({}),u=function(e){return function(t){var n=p(t.components);return s.createElement(e,o({},t,{components:n}))}},p=function(e){var t=s.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=p(e.components);return s.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},f=s.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,r=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,f=u["".concat(r,".").concat(m)]||u[m]||c[m]||o;return n?s.createElement(f,i(i({ref:t},d),{},{components:n})):s.createElement(f,i({ref:t},d))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=f;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,r[1]=i;for(var d=2;d<o;d++)r[d]=n[d];return s.createElement.apply(null,r)}return s.createElement.apply(null,n)}f.displayName="MDXCreateElement"},4802:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var s=n(87462),a=(n(67294),n(3905));const o={title:"When to use XState Test",description:"Model-based testing with XState: Model-based testing is good for many use cases but not for all use cases. What makes a good candidate for model-based testing?"},r="When to use @xstate/test",i={unversionedId:"xstate/model-based-testing/when-to-use",id:"version-4/xstate/model-based-testing/when-to-use",title:"When to use XState Test",description:"Model-based testing with XState: Model-based testing is good for many use cases but not for all use cases. What makes a good candidate for model-based testing?",source:"@site/versioned_docs/version-4/xstate/model-based-testing/when-to-use.mdx",sourceDirName:"xstate/model-based-testing",slug:"/xstate/model-based-testing/when-to-use",permalink:"/docs/xstate-v4/xstate/model-based-testing/when-to-use",draft:!1,editUrl:"https://github.com/statelyai/docs/tree/main/versioned_docs/version-4/xstate/model-based-testing/when-to-use.mdx",tags:[],version:"4",frontMatter:{title:"When to use XState Test",description:"Model-based testing with XState: Model-based testing is good for many use cases but not for all use cases. What makes a good candidate for model-based testing?"},sidebar:"tutorialSidebar",previous:{title:"Model-based testing",permalink:"/docs/xstate-v4/xstate/model-based-testing/intro"},next:{title:"Quickstart",permalink:"/docs/xstate-v4/xstate/model-based-testing/quickstart"}},l={},d=[{value:"Long setup",id:"long-setup",level:2},{value:"Examples of long setups",id:"examples-of-long-setups",level:3},{value:"Examples of short setups",id:"examples-of-short-setups",level:3}],u={toc:d};function p(e){let{components:t,...n}=e;return(0,a.mdx)("wrapper",(0,s.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"when-to-use-xstatetest"},"When to use ",(0,a.mdx)("inlineCode",{parentName:"h1"},"@xstate/test")),(0,a.mdx)("p",null,"When you discover a new tool, it\u2019s tempting to use that tool for everything. Model-based testing is good for many use cases but not for all use cases."),(0,a.mdx)("p",null,"Let\u2019s explore what makes a ",(0,a.mdx)("em",{parentName:"p"},"good")," candidate for model-based testing."),(0,a.mdx)("h2",{id:"long-setup"},"Long setup"),(0,a.mdx)("p",null,(0,a.mdx)("inlineCode",{parentName:"p"},"@xstate/test")," is most useful when what you\u2019re testing requires a ",(0,a.mdx)("strong",{parentName:"p"},"lengthy, complex setup"),". For example, if you were manually testing a multi-step form, you might need to input the same fields again and again to perform the tests."),(0,a.mdx)("p",null,"In these situations, ",(0,a.mdx)("inlineCode",{parentName:"p"},"@xstate/test")," shines because it can automate a lot of the setup for you over multiple tests."),(0,a.mdx)("p",null,"However, many tests require no setup at all. Take the following function for example:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-ts"},"const add = (a: number, b: number) => {\n  return a + b;\n};\n")),(0,a.mdx)("p",null,"The ",(0,a.mdx)("inlineCode",{parentName:"p"},"add")," function requires ",(0,a.mdx)("em",{parentName:"p"},"no")," setup whatsoever and can be tested as follows:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-js"},"it('Should add numbers together', () => {\n  expect(add(1, 2)).toEqual(3);\n});\n")),(0,a.mdx)("p",null,"In general, you should ",(0,a.mdx)("strong",{parentName:"p"},"avoid using model-based testing in situations that require no setup"),"."),(0,a.mdx)("h3",{id:"examples-of-long-setups"},"Examples of long setups"),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},"Testing ",(0,a.mdx)("strong",{parentName:"li"},"frontend applications")," that can be in complex states."),(0,a.mdx)("li",{parentName:"ul"},"Testing ",(0,a.mdx)("strong",{parentName:"li"},"backend methods")," where the database needs to be set up into a certain state before it can be tested."),(0,a.mdx)("li",{parentName:"ul"},"Testing flows with ",(0,a.mdx)("strong",{parentName:"li"},"mocked dependencies")," which need to be set up in different ways before assertions are run.")),(0,a.mdx)("h3",{id:"examples-of-short-setups"},"Examples of short setups"),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},"Testing ",(0,a.mdx)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Pure_function"},"pure functions")," which take in an input and return a predictable output without firing ",(0,a.mdx)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Side_effect_(computer_science)"},"side effects"),".")))}p.isMDXComponent=!0}}]);