"use strict";(self.webpackChunkstately_docs=self.webpackChunkstately_docs||[]).push([[33730],{3905:(t,e,a)=>{a.r(e),a.d(e,{MDXContext:()=>s,MDXProvider:()=>x,mdx:()=>g,useMDXComponents:()=>p,withMDXComponents:()=>m});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function d(){return d=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(t[n]=a[n])}return t},d.apply(this,arguments)}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function o(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function l(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},d=Object.keys(t);for(n=0;n<d.length;n++)a=d[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(t);for(n=0;n<d.length;n++)a=d[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var s=n.createContext({}),m=function(t){return function(e){var a=p(e.components);return n.createElement(t,d({},e,{components:a}))}},p=function(t){var e=n.useContext(s),a=e;return t&&(a="function"==typeof t?t(e):o(o({},e),t)),a},x=function(t){var e=p(t.components);return n.createElement(s.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,d=t.originalType,i=t.parentName,s=l(t,["components","mdxType","originalType","parentName"]),m=p(a),x=r,u=m["".concat(i,".").concat(x)]||m[x]||c[x]||d;return a?n.createElement(u,o(o({ref:e},s),{},{components:a})):n.createElement(u,o({ref:e},s))}));function g(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var d=a.length,i=new Array(d);i[0]=u;var o={};for(var l in e)hasOwnProperty.call(e,l)&&(o[l]=e[l]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var s=2;s<d;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},52844:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>d,metadata:()=>o,toc:()=>s});var n=a(87462),r=(a(67294),a(3905));const d={},i=void 0,o={unversionedId:"xstate.statenodeconfig",id:"xstate.statenodeconfig",title:"xstate.statenodeconfig",description:"Home &gt; xstate &gt; StateNodeConfig",source:"@site/api/xstate/xstate.statenodeconfig.md",sourceDirName:".",slug:"/xstate.statenodeconfig",permalink:"/statelyai-docs/api/xstate/next/xstate.statenodeconfig",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"xstate.statenodeconfig.invoke",permalink:"/statelyai-docs/api/xstate/next/xstate.statenodeconfig.invoke"},next:{title:"xstate.statenodeconfig.meta",permalink:"/statelyai-docs/api/xstate/next/xstate.statenodeconfig.meta"}},l={},s=[{value:"StateNodeConfig interface",id:"statenodeconfig-interface",level:2},{value:"Properties",id:"properties",level:2}],m={toc:s};function p(t){let{components:e,...a}=t;return(0,r.mdx)("wrapper",(0,n.Z)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,r.mdx)("p",null,(0,r.mdx)("a",{parentName:"p",href:"/statelyai-docs/api/xstate/next/"},"Home")," ",">"," ",(0,r.mdx)("a",{parentName:"p",href:"/statelyai-docs/api/xstate/next/xstate"},"xstate")," ",">"," ",(0,r.mdx)("a",{parentName:"p",href:"/statelyai-docs/api/xstate/next/xstate.statenodeconfig"},"StateNodeConfig")),(0,r.mdx)("h2",{id:"statenodeconfig-interface"},"StateNodeConfig interface"),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Signature:")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-typescript"},"export interface StateNodeConfig<TContext extends MachineContext, TEvent extends EventObject, TActor extends ProvidedActor, TAction extends ParameterizedObject, TGuard extends ParameterizedObject, TDelay extends string, TTag extends string, TOutput> \n")),(0,r.mdx)("h2",{id:"properties"},"Properties"),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Property"),(0,r.mdx)("th",{parentName:"tr",align:null},"Modifiers"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.statenodeconfig.after"},"after?")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.delayedtransitions"},"DelayedTransitions"),"<","TContext, TEvent, TActor, TAction, TGuard, TDelay",">"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("em",{parentName:"td"},"(Optional)")," The mapping (or array) of delays (in milliseconds) to their potential transition(s). The delayed transitions are taken after the specified delay in an interpreter.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.statenodeconfig.always"},"always?")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.transitionconfigortarget"},"TransitionConfigOrTarget"),"<","TContext, TEvent, TEvent, TActor, TAction, TGuard, TDelay",">"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("em",{parentName:"td"},"(Optional)")," An eventless transition that is always taken when this state node is active.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.statenodeconfig.description"},"description?")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},"string"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("em",{parentName:"td"},"(Optional)")," A text description of the state node")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.statenodeconfig.entry"},"entry?")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.actions"},"Actions"),"<","TContext, TEvent, TEvent, undefined, TActor, TAction, TGuard, TDelay",">"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("em",{parentName:"td"},"(Optional)")," The action(s) to be executed upon entering the state node.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.statenodeconfig.exit"},"exit?")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.actions"},"Actions"),"<","TContext, TEvent, TEvent, undefined, TActor, TAction, TGuard, TDelay",">"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("em",{parentName:"td"},"(Optional)")," The action(s) to be executed upon exiting the state node.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.statenodeconfig.history"},"history?")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},"'shallow' ","|"," 'deep' ","|"," boolean ","|"," undefined"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("em",{parentName:"td"},"(Optional)")," Indicates whether the state node is a history state node, and what type of history: shallow, deep, true (shallow), false (none), undefined (none)")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.statenodeconfig.id"},"id?")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},"string ","|"," undefined"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("em",{parentName:"td"},"(Optional)")," The unique ID of the state node, which can be referenced as a transition target via the ",(0,r.mdx)("code",null,"#id")," syntax.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.statenodeconfig.initial"},"initial?")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.initialtransitionconfig"},"InitialTransitionConfig"),"<","TContext, TEvent, TActor, TAction, TGuard, TDelay",">"," ","|"," ",(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.singleorarray"},"SingleOrArray"),"<","string",">"," ","|"," undefined"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("em",{parentName:"td"},"(Optional)")," The initial state transition.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.statenodeconfig.invoke"},"invoke?")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.singleorarray"},"SingleOrArray"),"<",(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.invokeconfig"},"InvokeConfig"),"<","TContext, TEvent, TActor, TAction, TGuard, TDelay",">",">"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("em",{parentName:"td"},"(Optional)")," The services to invoke upon entering this state node. These services will be stopped upon exiting this state node.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.statenodeconfig.meta"},"meta?")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},"any"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("em",{parentName:"td"},"(Optional)")," The meta data associated with this state node, which will be returned in State instances.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.statenodeconfig.on"},"on?")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.transitionsconfig"},"TransitionsConfig"),"<","TContext, TEvent, TActor, TAction, TGuard, TDelay",">"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("em",{parentName:"td"},"(Optional)")," The mapping of event types to their potential transition(s).")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.statenodeconfig.ondone"},"onDone?")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},"string ","|"," ",(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.singleorarray"},"SingleOrArray"),"<",(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.transitionconfig"},"TransitionConfig"),"<","TContext, ",(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.donestateevent"},"DoneStateEvent"),", TEvent, TActor, TAction, TGuard, TDelay",">",">"," ","|"," undefined"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("p",null,(0,r.mdx)("em",{parentName:"td"},"(Optional)")," The potential transition(s) to be taken upon reaching a final child state node."),(0,r.mdx)("p",null,"This is equivalent to defining a ",(0,r.mdx)("code",null,"[done(id)]")," transition on this state node's ",(0,r.mdx)("code",null,"on")," property."))),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.statenodeconfig.order"},"order?")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},"number"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("em",{parentName:"td"},"(Optional)")," The order this state node appears. Corresponds to the implicit document order.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.statenodeconfig.output"},"output?")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.mapper"},"Mapper"),"<","TContext, TEvent, unknown, TEvent",">"," ","|"," ",(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.nonreducibleunknown"},"NonReducibleUnknown")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("p",null,(0,r.mdx)("em",{parentName:"td"},"(Optional)"),' The output data sent with the "xstate.done.state.',"_","id","_",'" event if this is a final state node.'),(0,r.mdx)("p",null,"The output data will be evaluated with the current ",(0,r.mdx)("code",null,"context")," and placed on the ",(0,r.mdx)("code",null,".data")," property of the event."))),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.statenodeconfig.states"},"states?")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.statesconfig"},"StatesConfig"),"<","TContext, TEvent, TActor, TAction, TGuard, TDelay, TTag, ",(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.nonreducibleunknown"},"NonReducibleUnknown"),">"," ","|"," undefined"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("em",{parentName:"td"},"(Optional)")," The mapping of state node keys to their state node configurations (recursive).")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.statenodeconfig.tags"},"tags?")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.singleorarray"},"SingleOrArray"),"<","TTag",">"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("em",{parentName:"td"},"(Optional)")," The tags for this state node, which are accumulated into the ",(0,r.mdx)("code",null,"state.tags")," property.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.statenodeconfig.target"},"target?")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},"string"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("em",{parentName:"td"},"(Optional)")," A default target for a history state")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"/statelyai-docs/api/xstate/next/xstate.statenodeconfig.type"},"type?")),(0,r.mdx)("td",{parentName:"tr",align:null}),(0,r.mdx)("td",{parentName:"tr",align:null},"'atomic' ","|"," 'compound' ","|"," 'parallel' ","|"," 'final' ","|"," 'history'"),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("p",null,(0,r.mdx)("em",{parentName:"td"},"(Optional)")," The type of this state node:"),(0,r.mdx)("p",null,"- ",(0,r.mdx)("code",null,"'atomic'")," - no child state nodes - ",(0,r.mdx)("code",null,"'compound'")," - nested child state nodes (XOR) - ",(0,r.mdx)("code",null,"'parallel'")," - orthogonal nested child state nodes (AND) - ",(0,r.mdx)("code",null,"'history'")," - history state node - ",(0,r.mdx)("code",null,"'final'")," - final state node"))))))}p.isMDXComponent=!0}}]);