"use strict";(self.webpackChunkstately_docs=self.webpackChunkstately_docs||[]).push([[29460],{3905:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>c,MDXProvider:()=>m,mdx:()=>f,useMDXComponents:()=>d,withMDXComponents:()=>p});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(){return r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},r.apply(this,arguments)}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=a.createContext({}),p=function(e){return function(t){var n=d(t.components);return a.createElement(e,r({},t,{components:n}))}},d=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=d(e.components);return a.createElement(c.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=d(n),m=i,u=p["".concat(l,".").concat(m)]||p[m]||h[m]||r;return n?a.createElement(u,o(o({ref:t},c),{},{components:n})):a.createElement(u,o({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var c=2;c<r;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},93634:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(67294);const i="embed_rxbU";var r=n(92949);function l(e){let{name:t,embedURL:n}=e;const{colorMode:l}=(0,r.I)();return a.createElement("iframe",{loading:"lazy",src:o(n,{colorMode:l}),className:i},a.createElement("a",{href:n},"View the ",a.createElement("em",null,t)," machine in Stately Studio"),".")}function o(e,t){const n=new URL(e);for(const a in t)n.searchParams.set(a,t[a]);return n.toString()}},90807:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var a=n(87462),i=(n(67294),n(3905)),r=n(93634);const l={title:"Final states"},o=void 0,s={unversionedId:"final-states",id:"final-states",title:"Final states",description:"A final state is a state that represents the completion or successful termination of a machine. It is defined by the type",source:"@site/docs/final-states.mdx",sourceDirName:".",slug:"/final-states",permalink:"/docs/final-states",draft:!1,editUrl:"https://github.com/statelyai/docs/tree/main/docs/final-states.mdx",tags:[],version:"current",frontMatter:{title:"Final states"},sidebar:"docs",previous:{title:"Initial states",permalink:"/docs/initial-states"},next:{title:"History states",permalink:"/docs/history-states"}},c={},p=[{value:"Using final states in Stately Studio",id:"using-final-states-in-stately-studio",level:2},{value:"Make a state a final state",id:"make-a-state-a-final-state",level:3},{value:"On the canvas",id:"on-the-canvas",level:4},{value:"Using the state Details panel",id:"using-the-state-details-panel",level:4},{value:"Top-level final states",id:"top-level-final-states",level:2},{value:"Child final states",id:"child-final-states",level:2},{value:"Final states in parallel states",id:"final-states-in-parallel-states",level:2},{value:"Output",id:"output",level:2},{value:"TypeScript",id:"typescript",level:2},{value:"Cheatsheet",id:"cheatsheet",level:2}],d=(m="Info",function(e){return console.warn("Component "+m+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.mdx)("div",e)});var m;const h={toc:p};function u(e){let{components:t,...n}=e;return(0,i.mdx)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,i.mdx)("p",null,"A final state is a state that represents the completion or successful termination of a machine. It is defined by the ",(0,i.mdx)("inlineCode",{parentName:"p"},"type: 'final'")," property on a state node:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-ts"},"import { createMachine, createActor } from 'xstate';\n\nconst feedbackMachine = createMachine({\n  initial: 'prompt',\n  states: {\n    prompt: {\n      /* ... */\n    },\n    thanks: {\n      /* ... */\n    },\n    // highlight-start\n    closed: {\n      type: 'final',\n    },\n    // highlight-end\n    // ...\n  },\n  on: {\n    'feedback.close': {\n      target: '.closed',\n    },\n  },\n});\n")),(0,i.mdx)("p",null,"When a machine reaches the final state, it can no longer receive any events, and anything running inside it is canceled and cleaned up. The box with a surrounding border icon represents the final state."),(0,i.mdx)("p",null,"A machine can have multiple final states or no final states."),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"A state machine can have zero or more final states. Some machines may run indefinitely and not need to terminate."),(0,i.mdx)("li",{parentName:"ul"},"Final states can have ",(0,i.mdx)("inlineCode",{parentName:"li"},"output")," data, which is sent to the parent machine when the machine terminates."),(0,i.mdx)("li",{parentName:"ul"},"When a machine reaches a top-level final state, it terminates."),(0,i.mdx)("li",{parentName:"ul"},"Final states cannot have transitions")),(0,i.mdx)(r.Z,{name:"Video player",embedURL:"https://stately.ai/registry/editor/embed/e13bef2b-bb13-4465-96ac-0bc25340688e?machineId=c6f8ca35-25e3-4fc6-b4fe-c9994715852e",mdxType:"EmbedMachine"}),(0,i.mdx)("h2",{id:"using-final-states-in-stately-studio"},"Using final states in Stately Studio"),(0,i.mdx)("p",null,"In the video player above,\xa0",(0,i.mdx)("em",{parentName:"p"},"Stopped"),"\xa0is the final child state in the\xa0",(0,i.mdx)("em",{parentName:"p"},"Opened"),"\xa0state. When the video player is\xa0",(0,i.mdx)("em",{parentName:"p"},"Stopped"),", the video player moves to its\xa0",(0,i.mdx)("em",{parentName:"p"},"Closed"),"\xa0state."),(0,i.mdx)("admonition",{type:"tip"},(0,i.mdx)("p",{parentName:"admonition"},"Watch our ",(0,i.mdx)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=wqW8Gz4NYDc&list=PLvWgkXBB3dd4I_l-djWVU2UGPyBgKfnTQ&index=7"},"\u201cWhat are final states?\u201d video on YouTube")," (55s).")),(0,i.mdx)("h3",{id:"make-a-state-a-final-state"},"Make a state a final state"),(0,i.mdx)("p",null,"First, select the state you want to set as the final state."),(0,i.mdx)("h4",{id:"on-the-canvas"},"On the canvas"),(0,i.mdx)("ol",null,(0,i.mdx)("li",{parentName:"ol"},"Right-click the state to open the edit menu."),(0,i.mdx)("li",{parentName:"ol"},"From the ",(0,i.mdx)("strong",{parentName:"li"},"Type")," options, choose ",(0,i.mdx)("strong",{parentName:"li"},"Final"),".")),(0,i.mdx)("h4",{id:"using-the-state-details-panel"},"Using the state Details panel"),(0,i.mdx)("ol",null,(0,i.mdx)("li",{parentName:"ol"},"Select the state you want to set as the final state."),(0,i.mdx)("li",{parentName:"ol"},"Open the state ",(0,i.mdx)(d,{size:18,mdxType:"Info"})," ",(0,i.mdx)("strong",{parentName:"li"},"Details")," panel from the right tool menu."),(0,i.mdx)("li",{parentName:"ol"},"From the type option, choose ",(0,i.mdx)("strong",{parentName:"li"},"Final"),".")),(0,i.mdx)("p",null,"To set the state back as a normal state, follow the same steps and select the ",(0,i.mdx)("strong",{parentName:"p"},"Normal")," type option."),(0,i.mdx)("h2",{id:"top-level-final-states"},"Top-level final states"),(0,i.mdx)("p",null,"A top-level final state is a final state that is a direct child state of the machine. When the machine reaches a top-level final state, the machine will terminate. When a machine terminates, it can no longer receive events nor transition."),(0,i.mdx)("h2",{id:"child-final-states"},"Child final states"),(0,i.mdx)("p",null,'When a child final state of a compound state is reached, that compound state is considered "done". The ',(0,i.mdx)("inlineCode",{parentName:"p"},"onDone")," transition of that compound state is taken."),(0,i.mdx)("h2",{id:"final-states-in-parallel-states"},"Final states in parallel states"),(0,i.mdx)("p",null,'When all regions of a parallel state are "done", the parallel state is considered "done". The ',(0,i.mdx)("inlineCode",{parentName:"p"},"onDone")," transition of the parallel state is taken."),(0,i.mdx)("p",null,"In this example, the ",(0,i.mdx)("inlineCode",{parentName:"p"},"preparation")," state is a parallel state with two regions: ",(0,i.mdx)("inlineCode",{parentName:"p"},"beans")," and ",(0,i.mdx)("inlineCode",{parentName:"p"},"water"),". When both regions are done, the ",(0,i.mdx)("inlineCode",{parentName:"p"},"preparation")," state is done, and the ",(0,i.mdx)("inlineCode",{parentName:"p"},"brewing")," state is entered."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-ts"},"import { createMachine, createActor } from 'xstate';\n\nconst coffeeMachine = createMachine({\n  initial: 'preparation',\n  states: {\n    preparation: {\n      type: 'parallel',\n      states: {\n        beans: {\n          initial: 'grinding',\n          states: {\n            grinding: {\n              on: {\n                grindingComplete: 'ground',\n              },\n            },\n            // highlight-start\n            ground: {\n              type: 'final',\n            },\n            // highlight-end\n          },\n        },\n        water: {\n          initial: 'heating',\n          states: {\n            heating: {\n              always: {\n                guard: 'waterBoiling',\n                target: 'heated',\n              },\n            },\n            // highlight-start\n            heated: {\n              type: 'final',\n            },\n            // highlight-end\n          },\n        },\n      },\n      // highlight-next-line\n      onDone: 'brewing',\n    },\n    brewing: {},\n  },\n});\n")),(0,i.mdx)("h2",{id:"output"},"Output"),(0,i.mdx)("p",null,"When a machine reaches its top-level final state, it can produce output data. You can specify this output data in the ",(0,i.mdx)("inlineCode",{parentName:"p"},".output")," property of the top-level final state:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-ts"},"import { createMachine, createActor } from 'xstate';\n\nconst currencyMachine = createMachine({\n  // ...\n  states: {\n    converting: {\n      // ...\n    },\n    converted: {\n      type: 'final',\n      // highlight-start\n      output: ({ context }) => ({\n        amount: context.amount,\n        currency: context.currency,\n      }),\n      // highlight-end\n    },\n  },\n});\n\nconst currencyActor = createActor(currencyMachine, {\n  input: {\n    amount: 10,\n    fromCurrency: 'USD',\n    toCurrency: 'EUR',\n  },\n});\n\ncurrencyActor.onDone(() => {\n  console.log(currencyActor.getSnapshot().output);\n  // logs e.g. { amount: 12, currency: 'EUR' }\n});\n")),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},".output")," can also be a static value")),(0,i.mdx)("h2",{id:"typescript"},"TypeScript"),(0,i.mdx)("p",null,(0,i.mdx)("em",{parentName:"p"},"Coming soon")),(0,i.mdx)("h2",{id:"cheatsheet"},"Cheatsheet"),(0,i.mdx)("p",null,(0,i.mdx)("em",{parentName:"p"},"Coming soon")))}u.isMDXComponent=!0}}]);