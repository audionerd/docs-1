"use strict";(self.webpackChunkstately_docs=self.webpackChunkstately_docs||[]).push([[89351],{3905:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>c,MDXProvider:()=>m,mdx:()=>g,useMDXComponents:()=>d,withMDXComponents:()=>p});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(){return s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},s.apply(this,arguments)}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){return function(t){var n=d(t.components);return r.createElement(e,s({},t,{components:n}))}},d=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=d(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=d(n),m=a,y=p["".concat(i,".").concat(m)]||p[m]||u[m]||s;return n?r.createElement(y,o(o({ref:t},c),{},{components:n})):r.createElement(y,o({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=y;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var c=2;c<s;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},238:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const s={title:"Playwright in XState Test",description:"Model-based testing with XState: How to implement model-based testing with Playwright and XState\u2019s @xstate/test package."},i="Playwright",o={unversionedId:"xstate/model-based-testing/playwright",id:"version-4/xstate/model-based-testing/playwright",title:"Playwright in XState Test",description:"Model-based testing with XState: How to implement model-based testing with Playwright and XState\u2019s @xstate/test package.",source:"@site/versioned_docs/version-4/xstate/model-based-testing/playwright.mdx",sourceDirName:"xstate/model-based-testing",slug:"/xstate/model-based-testing/playwright",permalink:"/statelyai-docs/docs/xstate-v4/xstate/model-based-testing/playwright",draft:!1,editUrl:"https://github.com/statelyai/docs/tree/main/versioned_docs/version-4/xstate/model-based-testing/playwright.mdx",tags:[],version:"4",frontMatter:{title:"Playwright in XState Test",description:"Model-based testing with XState: How to implement model-based testing with Playwright and XState\u2019s @xstate/test package."},sidebar:"tutorialSidebar",previous:{title:"Cypress in XState Test",permalink:"/statelyai-docs/docs/xstate-v4/xstate/model-based-testing/cypress"},next:{title:"Actors",permalink:"/statelyai-docs/docs/xstate-v4/category/xstate-actors"}},l={},c=[],p={toc:c};function d(e){let{components:t,...n}=e;return(0,a.mdx)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"playwright"},"Playwright"),(0,a.mdx)("p",null,"Integrating with ",(0,a.mdx)("a",{parentName:"p",href:"https://playwright.dev"},"Playwright")," is simple with ",(0,a.mdx)("inlineCode",{parentName:"p"},"@xstate/test"),"."),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-ts"},"import { createTestMachine, createTestModel } from '@xstate/test';\nimport { test } from '@playwright/test';\n\nconst machine = createTestMachine({\n  // machine config\n});\n\ndescribe('My app', () => {\n  createTestModel(machine)\n    .getPaths()\n    .forEach((path) => {\n      test(path.description, async ({ page }) => {\n        await path.test({\n          states: {},\n          events: {},\n        });\n      });\n    });\n});\n")))}d.isMDXComponent=!0}}]);