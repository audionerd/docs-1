"use strict";(self.webpackChunkstately_docs=self.webpackChunkstately_docs||[]).push([[87959],{3905:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>c,MDXProvider:()=>m,mdx:()=>y,useMDXComponents:()=>d,withMDXComponents:()=>p});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},a.apply(this,arguments)}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),p=function(e){return function(t){var n=d(t.components);return o.createElement(e,a({},t,{components:n}))}},d=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=d(e.components);return o.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=d(n),m=r,f=p["".concat(i,".").concat(m)]||p[m]||u[m]||a;return n?o.createElement(f,l(l({ref:t},c),{},{components:n})):o.createElement(f,l({ref:t},c))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}f.displayName="MDXCreateElement"},65392:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var o=n(87462),r=(n(67294),n(3905));const a={title:"Developer tools",description:"Find out more about the Stately XState CLI (Command Line Interface) and Chrome Devtools."},i=void 0,l={unversionedId:"developer-tools",id:"developer-tools",title:"Developer tools",description:"Find out more about the Stately XState CLI (Command Line Interface) and Chrome Devtools.",source:"@site/docs/developer-tools.mdx",sourceDirName:".",slug:"/developer-tools",permalink:"/statelyai-docs/docs/developer-tools",draft:!1,editUrl:"https://github.com/statelyai/docs/tree/main/docs/developer-tools.mdx",tags:[],version:"current",frontMatter:{title:"Developer tools",description:"Find out more about the Stately XState CLI (Command Line Interface) and Chrome Devtools."},sidebar:"docs",previous:{title:"Inspector",permalink:"/statelyai-docs/docs/inspector"},next:{title:"Glossary",permalink:"/statelyai-docs/docs/glossary"}},s={},c=[{value:"XState CLI (Command Line Interface)",id:"xstate-cli-command-line-interface",level:2},{value:"Installation",id:"installation",level:3},{value:"Commands",id:"commands",level:3},{value:"<code>xstate typegen &lt;files&gt;</code>",id:"xstate-typegen-files",level:4},{value:"Options",id:"options",level:4}],p={toc:c};function d(e){let{components:t,...n}=e;return(0,r.mdx)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("p",null,"Find more about our ",(0,r.mdx)("a",{parentName:"p",href:"#xstate-cli-command-line-interface"},"XState CLI (Command Line Interface)")," below. We plan to make extensions for more IDEs (Integrated Development Environments) in the future."),(0,r.mdx)("admonition",{type:"xstate"},(0,r.mdx)("p",{parentName:"admonition"},(0,r.mdx)("a",{parentName:"p",href:"/statelyai-docs/docs/xstate-vscode-extension"},"Read about our XState VS Code extension on its own page"),".")),(0,r.mdx)("h2",{id:"xstate-cli-command-line-interface"},"XState CLI (Command Line Interface)"),(0,r.mdx)("p",null,"The ",(0,r.mdx)("a",{parentName:"p",href:"https://github.com/statelyai/xstate-tools/tree/master/apps/cli"},"@xstate/cli (Command Line Interface) package")," contains commands for running typegen. The package is small right now, but we plan to add more features."),(0,r.mdx)("h3",{id:"installation"},"Installation"),(0,r.mdx)("p",null,"Run ",(0,r.mdx)("inlineCode",{parentName:"p"},"npm install @xstate/cli"),"."),(0,r.mdx)("h3",{id:"commands"},"Commands"),(0,r.mdx)("h4",{id:"xstate-typegen-files"},(0,r.mdx)("inlineCode",{parentName:"h4"},"xstate typegen <files>")),(0,r.mdx)("p",null,"Use the following command to run the typegen against a glob."),(0,r.mdx)("p",null,(0,r.mdx)("inlineCode",{parentName:"p"},'xstate typegen "src/**/*.ts?(x)"')),(0,r.mdx)("p",null,"Running typegen will scan every targeted file and generate a typegen file to accompany it. It will also import the typegen into your file, as described in ",(0,r.mdx)("a",{parentName:"p",href:"/statelyai-docs/docs/typegen"},"our typegen documentation"),"."),(0,r.mdx)("admonition",{type:"caution"},(0,r.mdx)("p",{parentName:"admonition"},"Ensure you wrap your glob in quotes for correct execution. If you don\u2019t wrap the glob in quotes, it will be interpreted as a list of files, not a glob, which will give unexpected results.")),(0,r.mdx)("h4",{id:"options"},"Options"),(0,r.mdx)("p",null,(0,r.mdx)("inlineCode",{parentName:"p"},'xstate typegen "src/**/*.ts?(x)" --watch')),(0,r.mdx)("p",null,"Runs the task on a watch, monitoring for changed files and running the typegen script against them."))}d.isMDXComponent=!0}}]);