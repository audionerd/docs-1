"use strict";(self.webpackChunkstately_docs=self.webpackChunkstately_docs||[]).push([[75341],{3905:(e,t,a)=>{a.r(t),a.d(t,{MDXContext:()=>c,MDXProvider:()=>p,mdx:()=>y,useMDXComponents:()=>u,withMDXComponents:()=>d});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(){return o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},o.apply(this,arguments)}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),d=function(e){return function(t){var a=u(t.components);return n.createElement(e,o({},t,{components:a}))}},u=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(a),p=r,h=d["".concat(i,".").concat(p)]||d[p]||m[p]||o;return a?n.createElement(h,l(l({ref:t},c),{},{components:a})):n.createElement(h,l({ref:t},c))}));function y(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},85162:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(67294),r=a(86010);const o="tabItem_Ymn6";function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,i),hidden:a},t)}},31792:(e,t,a)=>{a.d(t,{Z:()=>w});var n=a(87462),r=a(67294),o=a(86010),i=a(12466),l=a(76775),s=a(91980),c=a(67392),d=a(50012);function u(e){return function(e){var t;return(null==(t=r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})))?void 0:t.filter(Boolean))??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function p(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??u(a);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function m(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:a}=e;const n=(0,l.k6)(),o=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(n.location.search);t.set(o,e),n.replace({...n.location,search:t.toString()})}),[o,n])]}function y(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,o=p(e),[i,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o}))),[s,c]=h({queryString:a,groupId:n}),[u,y]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,o]=(0,d.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&o.set(e)}),[a,o])]}({groupId:n}),f=(()=>{const e=s??u;return m({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{f&&l(f)}),[f]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),c(e),y(e)}),[c,y,o]),tabValues:o}}var f=a(72389);const g="tabList_TRJ7",b="tabItem_hGfb";function x(e){let{className:t,block:a,selectedValue:l,selectValue:s,tabValues:c}=e;const d=[],{blockElementScrollPositionUntilNextRender:u}=(0,i.o5)(),p=e=>{const t=e.currentTarget,a=d.indexOf(t),n=c[a].value;n!==l&&(u(t),s(n))},m=e=>{var t;let a=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=d.indexOf(e.currentTarget)+1;a=d[t]??d[0];break}case"ArrowLeft":{const t=d.indexOf(e.currentTarget)-1;a=d[t]??d[d.length-1];break}}null==(t=a)||t.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},t)},c.map((e=>{let{value:t,label:a,attributes:i}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>d.push(e),onKeyDown:m,onClick:p},i,{className:(0,o.Z)("tabs__item",b,null==i?void 0:i.className,{"tabs__item--active":l===t})}),a??t)})))}function v(e){let{lazy:t,children:a,selectedValue:n}=e;const o=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"padding-top--s"}):null}return r.createElement("div",{className:"padding-top--s"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function k(e){const t=y(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",g)},r.createElement(x,(0,n.Z)({},e,t)),r.createElement(v,(0,n.Z)({},e,t)))}function w(e){const t=(0,f.Z)();return r.createElement(k,(0,n.Z)({key:String(t)},e))}},54183:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>c,toc:()=>u});var n=a(87462),r=(a(67294),a(3905)),o=a(31792),i=a(85162);const l={title:"Stately Sky getting started"},s="Getting started with Stately Sky",c={unversionedId:"stately-sky-getting-started",id:"stately-sky-getting-started",title:"Stately Sky getting started",description:"This guide will walk you through the process of creating a simple traffic light actor using Stately Sky.",source:"@site/docs/stately-sky-getting-started.mdx",sourceDirName:".",slug:"/stately-sky-getting-started",permalink:"/docs/stately-sky-getting-started",draft:!1,editUrl:"https://github.com/statelyai/docs/tree/main/docs/stately-sky-getting-started.mdx",tags:[],version:"current",frontMatter:{title:"Stately Sky getting started"}},d={},u=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Step 1: Create a machine in the Studio",id:"step-1-create-a-machine-in-the-studio",level:2},{value:"Step 2: Create an API key",id:"step-2-create-an-api-key",level:2},{value:"Step 3: Deploy your machine to Sky",id:"step-3-deploy-your-machine-to-sky",level:2},{value:"Step 4: Add your API key to the starter project",id:"step-4-add-your-api-key-to-the-starter-project",level:2},{value:"Step 5: Initialize the actor in the starter project",id:"step-5-initialize-the-actor-in-the-starter-project",level:2},{value:"Step 6: Fetching the actor config from Sky",id:"step-6-fetching-the-actor-config-from-sky",level:2},{value:"Finishing up",id:"finishing-up",level:2}],p={toc:u};function m(e){let{components:t,...l}=e;return(0,r.mdx)("wrapper",(0,n.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"getting-started-with-stately-sky"},"Getting started with Stately Sky"),(0,r.mdx)("p",null,"This guide will walk you through the process of creating a simple traffic light actor using Stately Sky.\n",(0,r.mdx)("strong",{parentName:"p"},"Please note that Sky is currently in alpha and will be changing rapidly"),"."),(0,r.mdx)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},"A Stately account with a ",(0,r.mdx)("a",{parentName:"li",href:"https://stately.ai/pricing"},"Pro or Enterprise subscription")),(0,r.mdx)("li",{parentName:"ol"},"Our Stately Sky starter project. ",(0,r.mdx)("a",{parentName:"li",href:"https://github.com/statelyai/sky-starter-app"},"Clone the repo to your local machine")),(0,r.mdx)("li",{parentName:"ol"},"A machine to deploy as an actor. To test, feel free to fork our ",(0,r.mdx)("a",{parentName:"li",href:"https://stately.ai/registry/editor/eb3e89f5-5936-439f-8254-2f6ea4303659?machineId=15fd8071-b80c-4a6f-b9f5-60b6cf578ee5"},"stop light example"))),(0,r.mdx)("h2",{id:"step-1-create-a-machine-in-the-studio"},"Step 1: Create a machine in the Studio"),(0,r.mdx)("p",null,"Create a project and compose your machine in the Studio with the transitions and states you want. For this example, we'll create a simple traffic light machine with three states: ",(0,r.mdx)("inlineCode",{parentName:"p"},"green"),", ",(0,r.mdx)("inlineCode",{parentName:"p"},"yellow"),", and ",(0,r.mdx)("inlineCode",{parentName:"p"},"red"),"."),(0,r.mdx)("p",null,(0,r.mdx)("img",{alt:"Traffic light machine in the Studio",src:a(18621).Z,width:"2560",height:"1826"})),(0,r.mdx)("admonition",{type:"xstate"},(0,r.mdx)("p",{parentName:"admonition"},"Sky only supports XState V5 machines. The changes in V5 provide both a better developer experience and adhere to the Actor Model more closely, allowing for Sky to capably deploy machines that reliably communicate their state.")),(0,r.mdx)("h2",{id:"step-2-create-an-api-key"},"Step 2: Create an API key"),(0,r.mdx)("p",null,"When you've finished creating your machine, you'll need to create an API key to deploy it to Sky. You can do this by clicking the \"Run\" button in the top right corner of the Studio. A screen will appear, prompting you to create an API key. Select that button."),(0,r.mdx)("p",null,(0,r.mdx)("img",{alt:"No API key created yet",src:a(97203).Z,width:"2560",height:"1826"})),(0,r.mdx)("p",null,"Be sure to copy that API key and save it somewhere safe. You'll need it later. The page should look like this:"),(0,r.mdx)("p",null,(0,r.mdx)("img",{alt:"API key created",src:a(84926).Z,width:"2560",height:"1826"})),(0,r.mdx)("h2",{id:"step-3-deploy-your-machine-to-sky"},"Step 3: Deploy your machine to Sky"),(0,r.mdx)("p",null,'Now that the API key is generated, you can deploy your machine to Sky as a running actor. Select the "Deploy new actor" button to start the process. Once the actor is deployed, the page will display the name of the running actor and the URL you can use to interact with it. You\'ll need to use that URL to communicate with the actor from the starter project.'),(0,r.mdx)("p",null,(0,r.mdx)("img",{alt:"Actor deployed",src:a(47583).Z,width:"2560",height:"1826"})),(0,r.mdx)("h2",{id:"step-4-add-your-api-key-to-the-starter-project"},"Step 4: Add your API key to the starter project"),(0,r.mdx)("p",null,"Start by opening ",(0,r.mdx)("a",{parentName:"p",href:"https://github.com/statelyai/sky-starter-app"},"the starter project")," in your code editor. Next install the packages using your package manager of choice:"),(0,r.mdx)(o.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,r.mdx)(i.Z,{value:"npm",mdxType:"TabItem"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"npm install\n"))),(0,r.mdx)(i.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"yarn install\n"))),(0,r.mdx)(i.Z,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"pnpm install\n")))),(0,r.mdx)("p",null,"At the root of the project, create a ",(0,r.mdx)("inlineCode",{parentName:"p"},".env")," file to hold your API key.\nThere are 2 variables that need to be set in the ",(0,r.mdx)("inlineCode",{parentName:"p"},".env")," file, paste your API key as the value for both these keys:"),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},(0,r.mdx)("inlineCode",{parentName:"li"},"SKY_API_KEY")," (used by the ",(0,r.mdx)("inlineCode",{parentName:"li"},"@xstate/cli")," to fetch the machine config)."),(0,r.mdx)("li",{parentName:"ol"},(0,r.mdx)("inlineCode",{parentName:"li"},"VITE_SKY_API_KEY")," (used by the Vite React app to connect to Sky).")),(0,r.mdx)("p",null,(0,r.mdx)("img",{alt:".env file",src:a(94449).Z,width:"2564",height:"1830"})),(0,r.mdx)("h2",{id:"step-5-initialize-the-actor-in-the-starter-project"},"Step 5: Initialize the actor in the starter project"),(0,r.mdx)("p",null,"After adding the API key, you'll need to initialize the actor. Create a new file in the ",(0,r.mdx)("inlineCode",{parentName:"p"},"src")," directory of the starter project. We named ours ",(0,r.mdx)("inlineCode",{parentName:"p"},"trafficLightActor.ts"),". In that file, import the ",(0,r.mdx)("inlineCode",{parentName:"p"},"actorFromStately")," function and initialize the actor with the provided URL and your own session ID. The session ID can be any string you want. We recommend using a UUID:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-typescript"},"import { actorFromStately } from '@statelyai/sky';\n\nconst actor = actorFromStately({\n  url: 'paste your actor url here',\n  sessionId: 'your session id here',\n});\n")),(0,r.mdx)("admonition",{type:"tip"},(0,r.mdx)("p",{parentName:"admonition"},"By default Sky is multiplayer. We make use of the session ID to allow multiple tenants to reference the same running actor instance.")),(0,r.mdx)("h2",{id:"step-6-fetching-the-actor-config-from-sky"},"Step 6: Fetching the actor config from Sky"),(0,r.mdx)("p",null,"Now that we've initialized the actor, we need to fetch the config from Sky. Doing so will download and generate the machine configuration file in our repo, giving us typesafety when interacting with the running actor!"),(0,r.mdx)("p",null,"To fetch the config, we'll use the XState CLI tool. In our ",(0,r.mdx)("inlineCode",{parentName:"p"},"package.json"),", we already have a reference to the script we need to run, named ",(0,r.mdx)("inlineCode",{parentName:"p"},"sky"),". This runs the command over all the files in the ",(0,r.mdx)("inlineCode",{parentName:"p"},"src")," repo to find configs associated with any initialized actors."),(0,r.mdx)("p",null,(0,r.mdx)("img",{alt:"package.json",src:a(47072).Z,width:"2564",height:"1830"})),(0,r.mdx)("p",null,"Using your package manager of choice, run the ",(0,r.mdx)("inlineCode",{parentName:"p"},"sky")," command. For convenience, feel free to use one of the npm or yarn commands below:"),(0,r.mdx)(o.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,r.mdx)(i.Z,{value:"npm",mdxType:"TabItem"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"npm run sky\n"))),(0,r.mdx)(i.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"yarn sky\n"))),(0,r.mdx)(i.Z,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"pnpm run sky\n")))),(0,r.mdx)("p",null,"Once completed, you should see a second argument passed to the ",(0,r.mdx)("inlineCode",{parentName:"p"},"actorFromStately")," function, with the name ",(0,r.mdx)("inlineCode",{parentName:"p"},"skyConfig")," and updated imports. You should also see a new TypeScript file in your ",(0,r.mdx)("inlineCode",{parentName:"p"},"src")," directory, named after the actor in the Studio. In our case, it's ",(0,r.mdx)("inlineCode",{parentName:"p"},"trafficLightActor.sky.ts"),"."),(0,r.mdx)("p",null,(0,r.mdx)("img",{alt:"traffic light actor",src:a(9515).Z,width:"2564",height:"1830"})),(0,r.mdx)("h2",{id:"finishing-up"},"Finishing up"),(0,r.mdx)("p",null,"And that's it! You're now able to interact with your running actor in much the same way you would with local ones, like sending events with the ",(0,r.mdx)("inlineCode",{parentName:"p"},"send()")," function. This is still in early days, so there are some limitations and things to remember. Specifically:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Only XState V5 machines are supported."),(0,r.mdx)("li",{parentName:"ul"},"Delayed transitions are not yet supported, but will be soon."),(0,r.mdx)("li",{parentName:"ul"},"The generated ",(0,r.mdx)("inlineCode",{parentName:"li"},"sky.ts")," files are meant to be added to source control."),(0,r.mdx)("li",{parentName:"ul"},"Running ",(0,r.mdx)("inlineCode",{parentName:"li"},"xstate sky")," will only affect a file if it hasn't already been fetched. If you make changes to the machine in the Studio, you'll need to delete the generated file ",(0,r.mdx)("inlineCode",{parentName:"li"},"yourFile.sky.ts")," and run the command again. Alternatively, you can force the refetch by running ",(0,r.mdx)("inlineCode",{parentName:"li"},"xstate sky --refetch"),".")))}m.isMDXComponent=!0},94449:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/code-env-file-717d031e0ad06333df3a31e27ad0e5c7.png"},47072:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/code-sky-cmd-0ec7ac0233adadf2f0a46a599fc0fc75.png"},9515:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/code-traffic-light-with-config-79a799fb7b9a5c1cba06ed4787ada2e5.png"},84926:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/editor-api-key-7ddf5a5cdb7da97403f4cd95f51eb99c.png"},47583:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/editor-deployed-actor-8f43f42a0121ce5d85fd93a4b25e1fa9.png"},97203:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/editor-no-api-key-8b4a97512b6ec6cb4f1248201e638422.png"},18621:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/editor-traffic-light-b2fb43dd3ec5f7a1f37248218cf05197.png"}}]);